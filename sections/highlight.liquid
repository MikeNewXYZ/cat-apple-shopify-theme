<div class="container" style="opacity: 0;" x-data="highlight">
  <div
    class="text-center"
    x-ref="text"
  >
    <h1 class="text-4xl font-semibold">
      {{ section.settings.heading_text }}
    </h1>

    <div class="mt-6 max-w-3xl mx-auto">
      {{ section.settings.description_richtext }}
    </div>
  </div>

  <div
    class="mt-16 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-x-8 gap-y-14"
    x-ref="highlights"
  >
    {% for block in section.blocks %}
      {% case block.type %}
        {% when 'highlight' %}
          <div class="relative w-full py-10 border-4 border-primary border-dashed">
            <figure class="absolute -top-9 left-1/2 -translate-x-1/2 w-16 aspect-square border-4 border-primary bg-base-100">
              <img
                class="w-full h-full object-contain object-center"
                src="{{ block.settings.top_icon_image | img_url: 'small' }}"
                draggable="false"
              />
            </figure>
      
            <div class="text-center w-full h-full flex flex-col justify-center items-center p-4">
              <h1 class="text-3xl font-semibold">
                {{ block.settings.heading_text }}
              </h1>
      
              <div class="text-md mt-2 max-w-sm">
                {{ block.settings.description_richtext }}
              </div>
            </div>
          </div>       
      {% endcase %}
    {% endfor %}

  </div>
</div>

<script>
document.addEventListener("alpine:init", () => {
  Alpine.data("highlight", () => ({
    waypoint: null,
    init() {
      this.waypoint = new Waypoint({
        element: this.$el,
        offset: "50%",
        handler: this.introAnimation.bind(this)
      })
    },
    introAnimation() {
      this.waypoint.destroy()
      
      const tl = anime.timeline({
        easing: "easeOutElastic(1, 2)",
        begin: () => this.$el.style.opacity = 1
      })

      tl.add({
        targets: this.$refs.text.children,
        opacity: [0, 1],
        scale: [0.5, 1],
        delay: anime.stagger(100),
      }).add({
        targets: this.$refs.highlights.children,
        opacity: [0, 1],
        scale: [0.5, 1],
        delay: anime.stagger(100),
      }, "-=500")  
    }
  }))
})
</script>

{% schema %}
{
  "name": "Highlight",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "heading_text",
      "label": "Heading text",
      "default": "Our Highlights"
    },
    {
      "type": "richtext",
      "id": "description_richtext",
      "label": "Description text",
      "default": "<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Sunt enim expedita inventore voluptatibus iusto esse.  Hic tenetur cupiditate accusantium ratione. Cupiditate enim eaque laboriosam tenetur maxime? Ut minima esse tempore!</p>"
    }
  ],
  "blocks": [
    {
      "type": "highlight",
      "name": "Highlight",
      "settings": [
        {
          "type": "image_picker",
          "id": "top_icon_image",
          "label": "Top icon"
        },
        {
          "type": "text",
          "id": "heading_text",
          "label": "Heading text",
          "default": "Heading"
        },
        {
          "type": "richtext",
          "id": "description_richtext",
          "label": "Description text",
          "default": "<p>Do in ex qui officia minim minim pariatur veniam sint proident labore reprehenderit.</p>"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Highlight",
      "blocks": [
        {
          "type": "highlight"
        },
        {
          "type": "highlight"
        },
        {
          "type": "highlight"
        },
        {
          "type": "highlight"
        }
      ]
    }
  ]
}
{% endschema %}