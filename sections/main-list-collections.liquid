<div class="overflow-hidden" x-data="listCollections">
  <hr
    class="divider divider-primary mt-0"
    x-ref="headingDividerTop"
  />

  <h1
    class="container text-center text-5xl md:text-6xl font-semibold pt-2 pb-4 md:pb-5"
    x-ref="heading"
  >
    {{ section.settings.heading_text }}
  </h1>

  <hr
    class="divider divider-primary mb-8"
    x-ref="headingDividerBottom"
  />

  {% paginate collections by section.settings.pagination %}
    <div
      class="container grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8"
      x-ref="collectionCards"
    >
      {% for collection in collections %}
        <div
          class="card card-compact w-full h-[30rem] bg-base-100 border-2 border-primary"
          x-data="listCollectionsCard"
          x-ref="card"
        >
          <figure class="border-b-2 border-b-primary flex-1 overflow-hidden">
            <img
              class="w-full h-full object-cover object-center"
              src="{{ collection.featured_image | img_url: 'large' }}"
              draggable="false"
            />
          </figure>
          <div class="card-body flex-[1] overflow-hidden justify-between">
            <div class="flex-1 mb-1">
              <h2 class="card-title block truncate">
                {{ collection.title }}
              </h2>
              <p>
                {{ collection.description | truncate: 200, '...' }}
              </p>
            </div>

            <div class="card-actions">
              <a
                class="btn btn-primary w-full"
                href="{{ collection.url }}"
                x-ref="button"
                @mouseEnter="handleMouseEnter"
                @mouseLeave="handleMouseLeave"
              >
                View Collection
              </a>
            </div>
          </div>
        </div>
      {% endfor %}
    </div>

    {% if paginate.pages > 1 %}
      <div
        class="container mt-8 md:mt-10 flex justify-center"
        x-ref="pagination"
      >
        {% render 'pagination',
          paginate: paginate
        %}
      </div>
    {% endif %}
  {% endpaginate %}
</div>

<script>
document.addEventListener("alpine:init", () => {
  Alpine.data("listCollections", () => ({
    init() {
      this.introAnimation()
    },
    introAnimation() {
      const tl = anime.timeline({
        easing: "easeOutQuint",
      })

      tl.add({
        targets: this.$refs.headingDividerTop,
        translateX: ["-100vw", "0vw"],
        duration: 500
      }).add({
        targets: this.$refs.headingDividerBottom,
        translateX: ["100vw", "0vw"],
        duration: 500
      }, "-=250").add({
        targets: this.$refs.heading,
        translateY: [10, 0],
        opacity: [0, 1],
        duration: 500
      }, "-=250").add({
        targets: this.$refs.collectionCards.children,
        translateY: [20, 0],
        opacity: [0, 1],
        duration: 1000,
        delay: anime.stagger(100)
      }, "-=250").add({
        targets: this.$refs.pagination,
        translateY: [10, 0],
        opacity: [0, 1],
        duration: 500
      }, "-=1000")
    }
  }))
})
</script>

<script>
document.addEventListener("alpine:init", () => {
  Alpine.data("listCollectionsCard", () => ({
    handleMouseEnter() {
      if (anime.get(this.$refs.card, "opacity") !== "1") return

      anime({
        targets: this.$refs.card,
        scale: 1.05,
        duration: 500,
        loop: true,
        direction: "alternate"
      })
    },
    handleMouseLeave() {
      if (anime.get(this.$refs.card, "opacity") !== "1") return

      anime.remove(this.$refs.card)

      anime({
        targets: this.$refs.card,
        scale: 1,
        duration: 500
      })
    }
  }))
})
</script>

{% schema %}
{
  "name": "List Collections",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "heading_text",
      "label": "Heading Text",
      "default": "Collections",
      "info": "The heading on the top of the page."
    },
    {
      "type": "range",
      "id": "pagination",
      "label": "Collection Pagination",
      "info": "The amount of collection cards that are shown on each page.",
      "min": 1,
      "max": 40,
      "step": 1,
      "default": 12
    }
  ]
}
{% endschema %}